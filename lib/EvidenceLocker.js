"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var _stream=require("stream"),EvidenceLocker=function(e){function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];_classCallCheck(this,t);var n=_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this,{objectMode:!0}));return n.options=Object.assign({},e),n.flatList={},n.caseFile={},n.kingpins=[],n._destroyed=!1,n}return _inherits(t,e),_createClass(t,[{key:"buildCase",value:function(e){var t=this,n=arguments.length<=1||void 0===arguments[1]?0:arguments[1],r=this.get(e),s={};return r.forEach(function(e){s[e]=t.buildCase(e,n+1)}),s}},{key:"destroy",value:function(e){var t=this;this._destroyed||(this._destroyed=!0,process.nextTick(function(){e&&self.emit("error",e),t.emit("close")}))}},{key:"file",value:function(e){var t=this,n=e.leads,r=e.source,s=e.suspect,i=this.get(s);n.forEach(function(e){t.get(e),-1===i.indexOf(e)&&i.push(e)}),r||this.kingpins.push(s)}},{key:"get",value:function(e){return this.hasId(e)||(this.flatList[e]=[]),this.flatList[e]}},{key:"hasId",value:function(e){return this.flatList.hasOwnProperty(e)}},{key:"_flush",value:function(e){var t=this,n=this.caseFile;this.kingpins.forEach(function(e){n[e]=t.buildCase(e,0)}),this.push(n),e()}},{key:"_transform",value:function(e,t,n){this.file(e),n()}}]),t}(_stream.Transform);exports["default"]=EvidenceLocker;